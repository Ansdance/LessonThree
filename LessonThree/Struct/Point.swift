//
//  Point.swift
//  LessonThree
//
//  Created by ANSAR DAULETBAYEV on 13.06.2023.
//

import Foundation

//Структуры (или структурированные типы данных), как и классы, являются способом группировки связанных данных и функций вместе в Swift. Они могут иметь свойства и методы, как и классы. Однако, есть несколько ключевых отличий между структурами и классами в Swift:
//
//Наследование: В отличие от классов, структуры не могут наследовать другие структуры или классы.
//Тип данных: Структуры являются типами значений (value types), а классы — типами ссылок (reference types). Это означает, что когда вы передаете структуру или присваиваете ее новой переменной, структура всегда копируется, в то время как для классов копируется только ссылка, и разные переменные могут ссылаться на один и тот же объект.
//Деинициализация: Структуры не могут иметь деструкторов (методов, вызываемых при уничтожении объекта), в то время как классы могут.


struct Point {
    var x: Double
    var y: Double
    
    func distance(to other: Point) -> Double {
        let dx = other.x - x
        let dy = other.y - y
        return (dx * dx + dy * dy).squareRoot()
    }
}

let p1 = Point(x: 3.0, y: 4.0)
let p2 = Point(x: 6.0, y: 8.0)
let distance = p1.distance(to: p2)
